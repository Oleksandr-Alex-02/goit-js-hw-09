{"mappings":"oeAAAA,EAAA,SAGQC,SAASC,cAAc,SACrBD,SAASC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notify from 'notiflix/build/notiflix-notify-aio';\n\nconst rest = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction position(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(resolve => {\n        console.log(resolve);\n      })\n      .catch(reject => {\n        console.log(reject);\n      });\n  }\n}\n"],"names":["parcelRequire","document","querySelector"],"version":3,"file":"03-promises.57b9220c.js.map"}